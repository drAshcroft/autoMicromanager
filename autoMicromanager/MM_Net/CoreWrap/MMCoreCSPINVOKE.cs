/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace CWrapper {

using System;
using System.Runtime.InteropServices;

class MMCoreCSPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("MMCoreCS", EntryPoint="SWIGRegisterExceptionCallbacks_MMCoreCS")]
    public static extern void SWIGRegisterExceptionCallbacks_MMCoreCS(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("MMCoreCS", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_MMCoreCS")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_MMCoreCS(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_MMCoreCS(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_MMCoreCS(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(MMCoreCSPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(MMCoreCSPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("MMCoreCS", EntryPoint="SWIGRegisterStringCallback_MMCoreCS")]
    public static extern void SWIGRegisterStringCallback_MMCoreCS(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_MMCoreCS(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  [DllImport("MMCoreCS", EntryPoint="CSharp_MM_CODE_OK_get")]
  public static extern int MM_CODE_OK_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_MM_CODE_ERR_get")]
  public static extern int MM_CODE_ERR_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_OK_get")]
  public static extern int DEVICE_OK_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_ERR_get")]
  public static extern int DEVICE_ERR_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INVALID_PROPERTY_get")]
  public static extern int DEVICE_INVALID_PROPERTY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INVALID_PROPERTY_VALUE_get")]
  public static extern int DEVICE_INVALID_PROPERTY_VALUE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_DUPLICATE_PROPERTY_get")]
  public static extern int DEVICE_DUPLICATE_PROPERTY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INVALID_PROPERTY_TYPE_get")]
  public static extern int DEVICE_INVALID_PROPERTY_TYPE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NATIVE_MODULE_FAILED_get")]
  public static extern int DEVICE_NATIVE_MODULE_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_UNSUPPORTED_DATA_FORMAT_get")]
  public static extern int DEVICE_UNSUPPORTED_DATA_FORMAT_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INTERNAL_INCONSISTENCY_get")]
  public static extern int DEVICE_INTERNAL_INCONSISTENCY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NOT_SUPPORTED_get")]
  public static extern int DEVICE_NOT_SUPPORTED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_UNKNOWN_LABEL_get")]
  public static extern int DEVICE_UNKNOWN_LABEL_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_UNSUPPORTED_COMMAND_get")]
  public static extern int DEVICE_UNSUPPORTED_COMMAND_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_UNKNOWN_POSITION_get")]
  public static extern int DEVICE_UNKNOWN_POSITION_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NO_CALLBACK_REGISTERED_get")]
  public static extern int DEVICE_NO_CALLBACK_REGISTERED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SERIAL_COMMAND_FAILED_get")]
  public static extern int DEVICE_SERIAL_COMMAND_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SERIAL_BUFFER_OVERRUN_get")]
  public static extern int DEVICE_SERIAL_BUFFER_OVERRUN_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SERIAL_INVALID_RESPONSE_get")]
  public static extern int DEVICE_SERIAL_INVALID_RESPONSE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SERIAL_TIMEOUT_get")]
  public static extern int DEVICE_SERIAL_TIMEOUT_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SELF_REFERENCE_get")]
  public static extern int DEVICE_SELF_REFERENCE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NO_PROPERTY_DATA_get")]
  public static extern int DEVICE_NO_PROPERTY_DATA_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_DUPLICATE_LABEL_get")]
  public static extern int DEVICE_DUPLICATE_LABEL_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INVALID_INPUT_PARAM_get")]
  public static extern int DEVICE_INVALID_INPUT_PARAM_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_BUFFER_OVERFLOW_get")]
  public static extern int DEVICE_BUFFER_OVERFLOW_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NONEXISTENT_CHANNEL_get")]
  public static extern int DEVICE_NONEXISTENT_CHANNEL_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INVALID_PROPERTY_LIMTS_get")]
  public static extern int DEVICE_INVALID_PROPERTY_LIMTS_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_SNAP_IMAGE_FAILED_get")]
  public static extern int DEVICE_SNAP_IMAGE_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_IMAGE_PARAMS_FAILED_get")]
  public static extern int DEVICE_IMAGE_PARAMS_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CORE_FOCUS_STAGE_UNDEF_get")]
  public static extern int DEVICE_CORE_FOCUS_STAGE_UNDEF_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CORE_EXPOSURE_FAILED_get")]
  public static extern int DEVICE_CORE_EXPOSURE_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CORE_CONFIG_FAILED_get")]
  public static extern int DEVICE_CORE_CONFIG_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CAMERA_BUSY_ACQUIRING_get")]
  public static extern int DEVICE_CAMERA_BUSY_ACQUIRING_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_INCOMPATIBLE_IMAGE_get")]
  public static extern int DEVICE_INCOMPATIBLE_IMAGE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CAN_NOT_SET_PROPERTY_get")]
  public static extern int DEVICE_CAN_NOT_SET_PROPERTY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_CORE_CHANNEL_PRESETS_FAILED_get")]
  public static extern int DEVICE_CORE_CHANNEL_PRESETS_FAILED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_LOCALLY_DEFINED_ERROR_get")]
  public static extern int DEVICE_LOCALLY_DEFINED_ERROR_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_DEVICE_NOT_CONNECTED_get")]
  public static extern int DEVICE_NOT_CONNECTED_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_MaxStrLength_get")]
  public static extern int MaxStrLength_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Name_get")]
  public static extern string g_Keyword_Name_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Description_get")]
  public static extern string g_Keyword_Description_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CameraName_get")]
  public static extern string g_Keyword_CameraName_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CameraID_get")]
  public static extern string g_Keyword_CameraID_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Binning_get")]
  public static extern string g_Keyword_Binning_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Exposure_get")]
  public static extern string g_Keyword_Exposure_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_ActualExposure_get")]
  public static extern string g_Keyword_ActualExposure_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_ActualInterval_ms_get")]
  public static extern string g_Keyword_ActualInterval_ms_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Interval_ms_get")]
  public static extern string g_Keyword_Interval_ms_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Elapsed_Time_ms_get")]
  public static extern string g_Keyword_Elapsed_Time_ms_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_PixelType_get")]
  public static extern string g_Keyword_PixelType_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_ReadoutTime_get")]
  public static extern string g_Keyword_ReadoutTime_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_ReadoutMode_get")]
  public static extern string g_Keyword_ReadoutMode_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Gain_get")]
  public static extern string g_Keyword_Gain_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_EMGain_get")]
  public static extern string g_Keyword_EMGain_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Offset_get")]
  public static extern string g_Keyword_Offset_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CCDTemperature_get")]
  public static extern string g_Keyword_CCDTemperature_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CCDTemperatureSetPoint_get")]
  public static extern string g_Keyword_CCDTemperatureSetPoint_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_State_get")]
  public static extern string g_Keyword_State_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Label_get")]
  public static extern string g_Keyword_Label_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Position_get")]
  public static extern string g_Keyword_Position_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Type_get")]
  public static extern string g_Keyword_Type_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Delay_get")]
  public static extern string g_Keyword_Delay_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_BaudRate_get")]
  public static extern string g_Keyword_BaudRate_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_DataBits_get")]
  public static extern string g_Keyword_DataBits_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_StopBits_get")]
  public static extern string g_Keyword_StopBits_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Parity_get")]
  public static extern string g_Keyword_Parity_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Handshaking_get")]
  public static extern string g_Keyword_Handshaking_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Port_get")]
  public static extern string g_Keyword_Port_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Speed_get")]
  public static extern string g_Keyword_Speed_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreDevice_get")]
  public static extern string g_Keyword_CoreDevice_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreInitialize_get")]
  public static extern string g_Keyword_CoreInitialize_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreCamera_get")]
  public static extern string g_Keyword_CoreCamera_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreShutter_get")]
  public static extern string g_Keyword_CoreShutter_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreXYStage_get")]
  public static extern string g_Keyword_CoreXYStage_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreFocus_get")]
  public static extern string g_Keyword_CoreFocus_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreAutoFocus_get")]
  public static extern string g_Keyword_CoreAutoFocus_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreAutoShutter_get")]
  public static extern string g_Keyword_CoreAutoShutter_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreChannelGroup_get")]
  public static extern string g_Keyword_CoreChannelGroup_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreImageProcessor_get")]
  public static extern string g_Keyword_CoreImageProcessor_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreSLM_get")]
  public static extern string g_Keyword_CoreSLM_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_CoreTimeoutMs_get")]
  public static extern string g_Keyword_CoreTimeoutMs_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Channel_get")]
  public static extern string g_Keyword_Channel_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Version_get")]
  public static extern string g_Keyword_Version_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_ColorMode_get")]
  public static extern string g_Keyword_ColorMode_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Transpose_SwapXY_get")]
  public static extern string g_Keyword_Transpose_SwapXY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Transpose_MirrorX_get")]
  public static extern string g_Keyword_Transpose_MirrorX_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Transpose_MirrorY_get")]
  public static extern string g_Keyword_Transpose_MirrorY_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Transpose_Correction_get")]
  public static extern string g_Keyword_Transpose_Correction_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Closed_Position_get")]
  public static extern string g_Keyword_Closed_Position_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Metadata_Z_get")]
  public static extern string g_Keyword_Metadata_Z_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Meatdata_Exposure_get")]
  public static extern string g_Keyword_Meatdata_Exposure_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Metadata_Score_get")]
  public static extern string g_Keyword_Metadata_Score_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Metadata_ImageNumber_get")]
  public static extern string g_Keyword_Metadata_ImageNumber_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_Keyword_Metadata_StartTime_get")]
  public static extern string g_Keyword_Metadata_StartTime_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_FieldDelimiters_get")]
  public static extern string g_FieldDelimiters_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Device_get")]
  public static extern string g_CFGCommand_Device_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Label_get")]
  public static extern string g_CFGCommand_Label_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Property_get")]
  public static extern string g_CFGCommand_Property_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Configuration_get")]
  public static extern string g_CFGCommand_Configuration_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_ConfigGroup_get")]
  public static extern string g_CFGCommand_ConfigGroup_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Equipment_get")]
  public static extern string g_CFGCommand_Equipment_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_Delay_get")]
  public static extern string g_CFGCommand_Delay_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_ImageSynchro_get")]
  public static extern string g_CFGCommand_ImageSynchro_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_ConfigPixelSize_get")]
  public static extern string g_CFGCommand_ConfigPixelSize_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGCommand_PixelSize_um_get")]
  public static extern string g_CFGCommand_PixelSize_um_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGGroup_System_get")]
  public static extern string g_CFGGroup_System_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGGroup_System_Startup_get")]
  public static extern string g_CFGGroup_System_Startup_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGGroup_System_Shutdown_get")]
  public static extern string g_CFGGroup_System_Shutdown_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_g_CFGGroup_PixelSizeUm_get")]
  public static extern string g_CFGGroup_PixelSizeUm_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__DATABITS_5_get")]
  public static extern int _DATABITS_5_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__DATABITS_6_get")]
  public static extern int _DATABITS_6_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__DATABITS_7_get")]
  public static extern int _DATABITS_7_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__DATABITS_8_get")]
  public static extern int _DATABITS_8_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__FLOWCONTROL_NONE_get")]
  public static extern int _FLOWCONTROL_NONE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__FLOWCONTROL_RTSCTS_IN_get")]
  public static extern int _FLOWCONTROL_RTSCTS_IN_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__FLOWCONTROL_RTSCTS_OUT_get")]
  public static extern int _FLOWCONTROL_RTSCTS_OUT_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__FLOWCONTROL_XONXOFF_IN_get")]
  public static extern int _FLOWCONTROL_XONXOFF_IN_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__FLOWCONTROL_XONXOFF_OUT_get")]
  public static extern int _FLOWCONTROL_XONXOFF_OUT_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__PARITY_EVEN_get")]
  public static extern int _PARITY_EVEN_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__PARITY_MARK_get")]
  public static extern int _PARITY_MARK_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__PARITY_NONE_get")]
  public static extern int _PARITY_NONE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__PARITY_ODD_get")]
  public static extern int _PARITY_ODD_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__PARITY_SPACE_get")]
  public static extern int _PARITY_SPACE_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__STOPBITS_1_get")]
  public static extern int _STOPBITS_1_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__STOPBITS_1_5_get")]
  public static extern int _STOPBITS_1_5_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp__STOPBITS_2_get")]
  public static extern int _STOPBITS_2_get();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CMMError__SWIG_0")]
  public static extern IntPtr new_CMMError__SWIG_0(string jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CMMError__SWIG_1")]
  public static extern IntPtr new_CMMError__SWIG_1(string jarg1, string jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CMMError__SWIG_2")]
  public static extern IntPtr new_CMMError__SWIG_2(int jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_CMMError")]
  public static extern void delete_CMMError(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMError_getMsg")]
  public static extern string CMMError_getMsg(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMError_getCode")]
  public static extern int CMMError_getCode(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMError_setCoreMsg")]
  public static extern void CMMError_setCoreMsg(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMError_getCoreMsg")]
  public static extern string CMMError_getCoreMsg(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertySetting__SWIG_0")]
  public static extern IntPtr new_PropertySetting__SWIG_0(string jarg1, string jarg2, string jarg3, bool jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertySetting__SWIG_1")]
  public static extern IntPtr new_PropertySetting__SWIG_1(string jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertySetting__SWIG_2")]
  public static extern IntPtr new_PropertySetting__SWIG_2();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_PropertySetting")]
  public static extern void delete_PropertySetting(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getDeviceLabel")]
  public static extern string PropertySetting_getDeviceLabel(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getPropertyName")]
  public static extern string PropertySetting_getPropertyName(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getReadOnly")]
  public static extern bool PropertySetting_getReadOnly(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getPropertyValue")]
  public static extern string PropertySetting_getPropertyValue(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getKey")]
  public static extern string PropertySetting_getKey(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_generateKey")]
  public static extern string PropertySetting_generateKey(string jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_Serialize")]
  public static extern string PropertySetting_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_Restore")]
  public static extern void PropertySetting_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_getVerbose")]
  public static extern string PropertySetting_getVerbose(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertySetting_isEqualTo")]
  public static extern bool PropertySetting_isEqualTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertyPair__SWIG_0")]
  public static extern IntPtr new_PropertyPair__SWIG_0(string jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertyPair__SWIG_1")]
  public static extern IntPtr new_PropertyPair__SWIG_1();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_PropertyPair")]
  public static extern void delete_PropertyPair(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyPair_getPropertyName")]
  public static extern string PropertyPair_getPropertyName(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyPair_getPropertyValue")]
  public static extern string PropertyPair_getPropertyValue(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_Configuration")]
  public static extern IntPtr new_Configuration();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_Configuration")]
  public static extern void delete_Configuration(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_addSetting")]
  public static extern void Configuration_addSetting(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_deleteSetting")]
  public static extern void Configuration_deleteSetting(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_isPropertyIncluded")]
  public static extern bool Configuration_isPropertyIncluded(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_isSettingIncluded")]
  public static extern bool Configuration_isSettingIncluded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_isConfigurationIncluded")]
  public static extern bool Configuration_isConfigurationIncluded(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_getSetting__SWIG_0")]
  public static extern IntPtr Configuration_getSetting__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_getSetting__SWIG_1")]
  public static extern IntPtr Configuration_getSetting__SWIG_1(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_size")]
  public static extern uint Configuration_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_getVerbose")]
  public static extern string Configuration_getVerbose(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_Serialize")]
  public static extern string Configuration_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Configuration_Restore")]
  public static extern void Configuration_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_PropertyBlock")]
  public static extern IntPtr new_PropertyBlock();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_PropertyBlock")]
  public static extern void delete_PropertyBlock(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyBlock_addPair")]
  public static extern void PropertyBlock_addPair(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyBlock_getPair")]
  public static extern IntPtr PropertyBlock_getPair(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyBlock_size")]
  public static extern uint PropertyBlock_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_PropertyBlock_getValue")]
  public static extern string PropertyBlock_getValue(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CMMCore")]
  public static extern IntPtr new_CMMCore();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_CMMCore")]
  public static extern void delete_CMMCore(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_SetPluginFolder")]
  public static extern void CMMCore_SetPluginFolder(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_loadDevice")]
  public static extern void CMMCore_loadDevice(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_unloadAllDevices")]
  public static extern void CMMCore_unloadAllDevices(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_initializeAllDevices")]
  public static extern void CMMCore_initializeAllDevices(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_initializeDevice")]
  public static extern void CMMCore_initializeDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_reset")]
  public static extern void CMMCore_reset(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_clearLog")]
  public static extern void CMMCore_clearLog(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_initializeLogging")]
  public static extern void CMMCore_initializeLogging(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_shutdownLogging")]
  public static extern void CMMCore_shutdownLogging(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_enableDebugLog")]
  public static extern void CMMCore_enableDebugLog(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_enableStderrLog")]
  public static extern void CMMCore_enableStderrLog(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getUserId")]
  public static extern string CMMCore_getUserId(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getHostName")]
  public static extern string CMMCore_getHostName(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_logMessage")]
  public static extern void CMMCore_logMessage(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getVersionInfo")]
  public static extern string CMMCore_getVersionInfo(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAPIVersionInfo")]
  public static extern string CMMCore_getAPIVersionInfo(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSystemState")]
  public static extern IntPtr CMMCore_getSystemState(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSystemStateCache")]
  public static extern IntPtr CMMCore_getSystemStateCache(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_updateSystemStateCache")]
  public static extern void CMMCore_updateSystemStateCache(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSystemState")]
  public static extern void CMMCore_setSystemState(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getConfigState")]
  public static extern IntPtr CMMCore_getConfigState(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getConfigGroupState")]
  public static extern IntPtr CMMCore_getConfigGroupState(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_saveSystemState")]
  public static extern void CMMCore_saveSystemState(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_loadSystemState")]
  public static extern void CMMCore_loadSystemState(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_saveSystemConfiguration")]
  public static extern void CMMCore_saveSystemConfiguration(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_loadSystemConfiguration")]
  public static extern void CMMCore_loadSystemConfiguration(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_registerCallback")]
  public static extern void CMMCore_registerCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailableDevices")]
  public static extern IntPtr CMMCore_getAvailableDevices(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailableDeviceDescriptions")]
  public static extern IntPtr CMMCore_getAvailableDeviceDescriptions(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailableDeviceTypes")]
  public static extern IntPtr CMMCore_getAvailableDeviceTypes(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getDeviceLibraries")]
  public static extern IntPtr CMMCore_getDeviceLibraries(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getLoadedDevices")]
  public static extern IntPtr CMMCore_getLoadedDevices(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getLoadedDevicesOfType")]
  public static extern IntPtr CMMCore_getLoadedDevicesOfType(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getDevicePropertyNames")]
  public static extern IntPtr CMMCore_getDevicePropertyNames(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getProperty")]
  public static extern string CMMCore_getProperty(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setProperty")]
  public static extern void CMMCore_setProperty(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_hasProperty")]
  public static extern bool CMMCore_hasProperty(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAllowedPropertyValues")]
  public static extern IntPtr CMMCore_getAllowedPropertyValues(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isPropertyReadOnly")]
  public static extern bool CMMCore_isPropertyReadOnly(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isPropertyPreInit")]
  public static extern bool CMMCore_isPropertyPreInit(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_hasPropertyLimits")]
  public static extern bool CMMCore_hasPropertyLimits(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPropertyLowerLimit")]
  public static extern double CMMCore_getPropertyLowerLimit(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPropertyUpperLimit")]
  public static extern double CMMCore_getPropertyUpperLimit(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPropertyType")]
  public static extern int CMMCore_getPropertyType(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getDeviceType")]
  public static extern int CMMCore_getDeviceType(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deviceBusy")]
  public static extern bool CMMCore_deviceBusy(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_waitForDevice")]
  public static extern void CMMCore_waitForDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_waitForConfig")]
  public static extern void CMMCore_waitForConfig(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_systemBusy")]
  public static extern bool CMMCore_systemBusy(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_waitForSystem")]
  public static extern void CMMCore_waitForSystem(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_waitForImageSynchro")]
  public static extern void CMMCore_waitForImageSynchro(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deviceTypeBusy")]
  public static extern bool CMMCore_deviceTypeBusy(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_waitForDeviceType")]
  public static extern void CMMCore_waitForDeviceType(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_sleep")]
  public static extern void CMMCore_sleep(HandleRef jarg1, double jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getDeviceDelayMs")]
  public static extern double CMMCore_getDeviceDelayMs(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setDeviceDelayMs")]
  public static extern void CMMCore_setDeviceDelayMs(HandleRef jarg1, string jarg2, double jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setTimeoutMs")]
  public static extern void CMMCore_setTimeoutMs(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getTimeoutMs")]
  public static extern int CMMCore_getTimeoutMs(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_usesDeviceDelay")]
  public static extern bool CMMCore_usesDeviceDelay(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getCoreErrorText")]
  public static extern string CMMCore_getCoreErrorText(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getCameraDevice")]
  public static extern string CMMCore_getCameraDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getShutterDevice")]
  public static extern string CMMCore_getShutterDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getFocusDevice")]
  public static extern string CMMCore_getFocusDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getXYStageDevice")]
  public static extern string CMMCore_getXYStageDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAutoFocusDevice")]
  public static extern string CMMCore_getAutoFocusDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImageProcessorDevice")]
  public static extern string CMMCore_getImageProcessorDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSLMDevice")]
  public static extern string CMMCore_getSLMDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getChannelGroup")]
  public static extern string CMMCore_getChannelGroup(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setCameraDevice")]
  public static extern void CMMCore_setCameraDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setShutterDevice")]
  public static extern void CMMCore_setShutterDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setFocusDevice")]
  public static extern void CMMCore_setFocusDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setXYStageDevice")]
  public static extern void CMMCore_setXYStageDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setAutoFocusDevice")]
  public static extern void CMMCore_setAutoFocusDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setImageProcessorDevice")]
  public static extern void CMMCore_setImageProcessorDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSLMDevice")]
  public static extern void CMMCore_setSLMDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setChannelGroup")]
  public static extern void CMMCore_setChannelGroup(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_defineConfig__SWIG_0")]
  public static extern void CMMCore_defineConfig__SWIG_0(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_defineConfig__SWIG_1")]
  public static extern void CMMCore_defineConfig__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5, string jarg6);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_defineConfigGroup")]
  public static extern void CMMCore_defineConfigGroup(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deleteConfigGroup")]
  public static extern void CMMCore_deleteConfigGroup(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_renameConfigGroup")]
  public static extern void CMMCore_renameConfigGroup(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isGroupDefined")]
  public static extern bool CMMCore_isGroupDefined(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isConfigDefined")]
  public static extern bool CMMCore_isConfigDefined(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setConfig")]
  public static extern void CMMCore_setConfig(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deleteConfig__SWIG_0")]
  public static extern void CMMCore_deleteConfig__SWIG_0(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deleteConfig__SWIG_1")]
  public static extern void CMMCore_deleteConfig__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_renameConfig")]
  public static extern void CMMCore_renameConfig(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailableConfigGroups")]
  public static extern IntPtr CMMCore_getAvailableConfigGroups(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailableConfigs")]
  public static extern IntPtr CMMCore_getAvailableConfigs(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getCurrentConfig")]
  public static extern string CMMCore_getCurrentConfig(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getConfigData")]
  public static extern IntPtr CMMCore_getConfigData(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getCurrentPixelSizeConfig")]
  public static extern string CMMCore_getCurrentPixelSizeConfig(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPixelSizeUm")]
  public static extern double CMMCore_getPixelSizeUm(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPixelSizeUmByID")]
  public static extern double CMMCore_getPixelSizeUmByID(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getMagnificationFactor")]
  public static extern double CMMCore_getMagnificationFactor(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setPixelSizeUm")]
  public static extern void CMMCore_setPixelSizeUm(HandleRef jarg1, string jarg2, double jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_definePixelSizeConfig__SWIG_0")]
  public static extern void CMMCore_definePixelSizeConfig__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, string jarg4, string jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_definePixelSizeConfig__SWIG_1")]
  public static extern void CMMCore_definePixelSizeConfig__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailablePixelSizeConfigs")]
  public static extern IntPtr CMMCore_getAvailablePixelSizeConfigs(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isPixelSizeConfigDefined")]
  public static extern bool CMMCore_isPixelSizeConfigDefined(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setPixelSizeConfig")]
  public static extern void CMMCore_setPixelSizeConfig(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_renamePixelSizeConfig")]
  public static extern void CMMCore_renamePixelSizeConfig(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_deletePixelSizeConfig")]
  public static extern void CMMCore_deletePixelSizeConfig(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPixelSizeConfigData")]
  public static extern IntPtr CMMCore_getPixelSizeConfigData(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setROI")]
  public static extern void CMMCore_setROI(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getROI")]
  public static extern void CMMCore_getROI(HandleRef jarg1, out int jarg2, out int jarg3, out int jarg4, out int jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_clearROI")]
  public static extern void CMMCore_clearROI(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setExposure")]
  public static extern void CMMCore_setExposure(HandleRef jarg1, double jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getExposure")]
  public static extern double CMMCore_getExposure(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImage")]
  public static extern IntPtr CMMCore_getImage(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getRGB32Image")]
  public static extern IntPtr CMMCore_getRGB32Image(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_snapImage")]
  public static extern void CMMCore_snapImage(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImageWidth")]
  public static extern uint CMMCore_getImageWidth(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImageHeight")]
  public static extern uint CMMCore_getImageHeight(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getBytesPerPixel")]
  public static extern uint CMMCore_getBytesPerPixel(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImageBitDepth")]
  public static extern uint CMMCore_getImageBitDepth(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getNumberOfComponents")]
  public static extern uint CMMCore_getNumberOfComponents(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getChannelNames")]
  public static extern IntPtr CMMCore_getChannelNames(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getImageBufferSize")]
  public static extern int CMMCore_getImageBufferSize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_assignImageSynchro")]
  public static extern void CMMCore_assignImageSynchro(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_removeImageSynchro")]
  public static extern void CMMCore_removeImageSynchro(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_removeImageSynchroAll")]
  public static extern void CMMCore_removeImageSynchroAll(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setAutoShutter")]
  public static extern void CMMCore_setAutoShutter(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAutoShutter")]
  public static extern bool CMMCore_getAutoShutter(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setShutterOpen")]
  public static extern void CMMCore_setShutterOpen(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getShutterOpen")]
  public static extern bool CMMCore_getShutterOpen(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_startSequenceAcquisition__SWIG_0")]
  public static extern void CMMCore_startSequenceAcquisition__SWIG_0(HandleRef jarg1, int jarg2, double jarg3, bool jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_startSequenceAcquisition__SWIG_1")]
  public static extern void CMMCore_startSequenceAcquisition__SWIG_1(HandleRef jarg1, string jarg2, int jarg3, double jarg4, bool jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_prepareSequenceAcquisition")]
  public static extern void CMMCore_prepareSequenceAcquisition(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_startContinuousSequenceAcquisition")]
  public static extern void CMMCore_startContinuousSequenceAcquisition(HandleRef jarg1, double jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_stopSequenceAcquisition__SWIG_0")]
  public static extern void CMMCore_stopSequenceAcquisition__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_stopSequenceAcquisition__SWIG_1")]
  public static extern void CMMCore_stopSequenceAcquisition__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isSequenceRunning__SWIG_0")]
  public static extern bool CMMCore_isSequenceRunning__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isSequenceRunning__SWIG_1")]
  public static extern bool CMMCore_isSequenceRunning__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getLastImage")]
  public static extern IntPtr CMMCore_getLastImage(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_popNextImage")]
  public static extern IntPtr CMMCore_popNextImage(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getLastImageMD")]
  public static extern IntPtr CMMCore_getLastImageMD(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_popNextImageMD")]
  public static extern IntPtr CMMCore_popNextImageMD(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getRemainingImageCount")]
  public static extern int CMMCore_getRemainingImageCount(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getBufferTotalCapacity")]
  public static extern int CMMCore_getBufferTotalCapacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getBufferFreeCapacity")]
  public static extern int CMMCore_getBufferFreeCapacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getBufferIntervalMs")]
  public static extern double CMMCore_getBufferIntervalMs(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isBufferOverflowed")]
  public static extern bool CMMCore_isBufferOverflowed(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setCircularBufferMemoryFootprint")]
  public static extern void CMMCore_setCircularBufferMemoryFootprint(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_intializeCircularBuffer")]
  public static extern void CMMCore_intializeCircularBuffer(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getLastFocusScore")]
  public static extern double CMMCore_getLastFocusScore(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getCurrentFocusScore")]
  public static extern double CMMCore_getCurrentFocusScore(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_enableContinuousFocus")]
  public static extern void CMMCore_enableContinuousFocus(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isContinuousFocusEnabled")]
  public static extern bool CMMCore_isContinuousFocusEnabled(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_isContinuousFocusLocked")]
  public static extern bool CMMCore_isContinuousFocusLocked(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_fullFocus")]
  public static extern void CMMCore_fullFocus(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_incrementalFocus")]
  public static extern void CMMCore_incrementalFocus(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setAutoFocusOffset")]
  public static extern void CMMCore_setAutoFocusOffset(HandleRef jarg1, double jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAutoFocusOffset")]
  public static extern double CMMCore_getAutoFocusOffset(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setState")]
  public static extern void CMMCore_setState(HandleRef jarg1, string jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getState")]
  public static extern int CMMCore_getState(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getNumberOfStates")]
  public static extern int CMMCore_getNumberOfStates(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setStateLabel")]
  public static extern void CMMCore_setStateLabel(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getStateLabel")]
  public static extern string CMMCore_getStateLabel(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_defineStateLabel")]
  public static extern void CMMCore_defineStateLabel(HandleRef jarg1, string jarg2, int jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getStateLabels")]
  public static extern IntPtr CMMCore_getStateLabels(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getStateFromLabel")]
  public static extern int CMMCore_getStateFromLabel(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getStateLabelData")]
  public static extern IntPtr CMMCore_getStateLabelData(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getData")]
  public static extern IntPtr CMMCore_getData(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_definePropertyBlock")]
  public static extern void CMMCore_definePropertyBlock(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getAvailablePropertyBlocks")]
  public static extern IntPtr CMMCore_getAvailablePropertyBlocks(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPropertyBlockData")]
  public static extern IntPtr CMMCore_getPropertyBlockData(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setPosition")]
  public static extern void CMMCore_setPosition(HandleRef jarg1, string jarg2, double jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getPosition")]
  public static extern double CMMCore_getPosition(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setRelativePosition")]
  public static extern void CMMCore_setRelativePosition(HandleRef jarg1, string jarg2, double jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setXYPosition")]
  public static extern void CMMCore_setXYPosition(HandleRef jarg1, string jarg2, double jarg3, double jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setRelativeXYPosition")]
  public static extern void CMMCore_setRelativeXYPosition(HandleRef jarg1, string jarg2, double jarg3, double jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getXYPosition")]
  public static extern void CMMCore_getXYPosition(HandleRef jarg1, string jarg2, out double jarg3, out double jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getXPosition")]
  public static extern double CMMCore_getXPosition(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getYPosition")]
  public static extern double CMMCore_getYPosition(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_stop")]
  public static extern void CMMCore_stop(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_home")]
  public static extern void CMMCore_home(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setOriginXY")]
  public static extern void CMMCore_setOriginXY(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setAdapterOriginXY")]
  public static extern void CMMCore_setAdapterOriginXY(HandleRef jarg1, string jarg2, double jarg3, double jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_GetStageLimits")]
  public static extern void CMMCore_GetStageLimits(HandleRef jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSerialPortCommand")]
  public static extern void CMMCore_setSerialPortCommand(HandleRef jarg1, string jarg2, string jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSerialPortAnswer")]
  public static extern string CMMCore_getSerialPortAnswer(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_writeToSerialPort")]
  public static extern void CMMCore_writeToSerialPort(HandleRef jarg1, string jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_readFromSerialPort")]
  public static extern IntPtr CMMCore_readFromSerialPort(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSLMImage__SWIG_0")]
  public static extern void CMMCore_setSLMImage__SWIG_0(HandleRef jarg1, string jarg2, [Out, MarshalAs(UnmanagedType.LPArray)]byte[] jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSLMImage__SWIG_1")]
  public static extern void CMMCore_setSLMImage__SWIG_1(HandleRef jarg1, string jarg2, [Out, MarshalAs(UnmanagedType.LPArray)]uint[] jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSLMPixelsTo__SWIG_0")]
  public static extern void CMMCore_setSLMPixelsTo__SWIG_0(HandleRef jarg1, string jarg2, byte jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_setSLMPixelsTo__SWIG_1")]
  public static extern void CMMCore_setSLMPixelsTo__SWIG_1(HandleRef jarg1, string jarg2, byte jarg3, byte jarg4, byte jarg5);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_displaySLMImage")]
  public static extern void CMMCore_displaySLMImage(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSLMWidth")]
  public static extern uint CMMCore_getSLMWidth(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSLMHeight")]
  public static extern uint CMMCore_getSLMHeight(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSLMNumberOfComponents")]
  public static extern uint CMMCore_getSLMNumberOfComponents(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_getSLMBytesPerPixel")]
  public static extern uint CMMCore_getSLMBytesPerPixel(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_SetSignalIOValue__SWIG_0")]
  public static extern double CMMCore_SetSignalIOValue__SWIG_0(HandleRef jarg1, double jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_SetSignalIOValue__SWIG_1")]
  public static extern double CMMCore_SetSignalIOValue__SWIG_1(HandleRef jarg1, [In, MarshalAs(UnmanagedType.LPArray)]double[] jarg2, int jarg3, string jarg4);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_SetSignalIOValue__SWIG_2")]
  public static extern double CMMCore_SetSignalIOValue__SWIG_2(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_GetSignalIOValue")]
  public static extern double CMMCore_GetSignalIOValue(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_GetSignalIOValues")]
  public static extern void CMMCore_GetSignalIOValues(HandleRef jarg1, string jarg2, [Out, MarshalAs(UnmanagedType.LPArray)]double[] jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_GetSignalUpperLimit")]
  public static extern double CMMCore_GetSignalUpperLimit(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CMMCore_GetSignalLowerLimit")]
  public static extern double CMMCore_GetSignalLowerLimit(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataError")]
  public static extern IntPtr new_MetadataError(string jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataError")]
  public static extern void delete_MetadataError(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataError_getMsg")]
  public static extern string MetadataError_getMsg(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataKeyError")]
  public static extern IntPtr new_MetadataKeyError();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataKeyError")]
  public static extern void delete_MetadataKeyError(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataIndexError")]
  public static extern IntPtr new_MetadataIndexError();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataIndexError")]
  public static extern void delete_MetadataIndexError(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataTag")]
  public static extern void delete_MetadataTag(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_GetDevice")]
  public static extern string MetadataTag_GetDevice(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_GetName")]
  public static extern string MetadataTag_GetName(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_IsReadOnly")]
  public static extern bool MetadataTag_IsReadOnly(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_SetDevice")]
  public static extern void MetadataTag_SetDevice(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_SetName")]
  public static extern void MetadataTag_SetName(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_SetReadOnly")]
  public static extern void MetadataTag_SetReadOnly(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_ToSingleTag__SWIG_0")]
  public static extern IntPtr MetadataTag_ToSingleTag__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_ToArrayTag__SWIG_0")]
  public static extern IntPtr MetadataTag_ToArrayTag__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_Clone")]
  public static extern IntPtr MetadataTag_Clone(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_Serialize")]
  public static extern string MetadataTag_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataTag_Restore")]
  public static extern bool MetadataTag_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataSingleTag__SWIG_0")]
  public static extern IntPtr new_MetadataSingleTag__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataSingleTag__SWIG_1")]
  public static extern IntPtr new_MetadataSingleTag__SWIG_1(string jarg1, string jarg2, bool jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataSingleTag")]
  public static extern void delete_MetadataSingleTag(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_GetValue")]
  public static extern string MetadataSingleTag_GetValue(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_SetValue")]
  public static extern void MetadataSingleTag_SetValue(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_ToSingleTag")]
  public static extern IntPtr MetadataSingleTag_ToSingleTag(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_Clone")]
  public static extern IntPtr MetadataSingleTag_Clone(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_Serialize")]
  public static extern string MetadataSingleTag_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTag_Restore")]
  public static extern bool MetadataSingleTag_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MetadataArrayTag")]
  public static extern IntPtr new_MetadataArrayTag();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MetadataArrayTag")]
  public static extern void delete_MetadataArrayTag(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_ToArrayTag")]
  public static extern IntPtr MetadataArrayTag_ToArrayTag(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_AddValue")]
  public static extern void MetadataArrayTag_AddValue(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_SetValue")]
  public static extern void MetadataArrayTag_SetValue(HandleRef jarg1, string jarg2, uint jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_GetValue")]
  public static extern string MetadataArrayTag_GetValue(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_GetSize")]
  public static extern uint MetadataArrayTag_GetSize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_Clone")]
  public static extern IntPtr MetadataArrayTag_Clone(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_Serialize")]
  public static extern string MetadataArrayTag_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTag_Restore")]
  public static extern bool MetadataArrayTag_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_Metadata")]
  public static extern IntPtr new_Metadata();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_Metadata")]
  public static extern void delete_Metadata(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_Clear")]
  public static extern void Metadata_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_GetKeys")]
  public static extern IntPtr Metadata_GetKeys(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_GetSingleTag")]
  public static extern IntPtr Metadata_GetSingleTag(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_GetArrayTag")]
  public static extern IntPtr Metadata_GetArrayTag(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_SetTag")]
  public static extern void Metadata_SetTag(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_eql")]
  public static extern IntPtr Metadata_eql(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_Serialize")]
  public static extern string Metadata_Serialize(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_Restore")]
  public static extern bool Metadata_Restore(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_Metadata_Dump")]
  public static extern string Metadata_Dump(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_MMEventCallback")]
  public static extern IntPtr new_MMEventCallback();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_MMEventCallback")]
  public static extern void delete_MMEventCallback(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MMEventCallback_onPropertiesChanged")]
  public static extern void MMEventCallback_onPropertiesChanged(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MMEventCallback_onCoordinateUpdate")]
  public static extern void MMEventCallback_onCoordinateUpdate(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_lSize_set")]
  public static extern void cImage_lSize_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_lSize_get")]
  public static extern int cImage_lSize_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Data_get")]
  public static extern IntPtr cImage_Data_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_RGB32_set")]
  public static extern void cImage_RGB32_set(HandleRef jarg1, bool jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_RGB32_get")]
  public static extern bool cImage_RGB32_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_NumComponents_set")]
  public static extern void cImage_NumComponents_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_NumComponents_get")]
  public static extern int cImage_NumComponents_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Width_set")]
  public static extern void cImage_Width_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Width_get")]
  public static extern int cImage_Width_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Height_set")]
  public static extern void cImage_Height_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Height_get")]
  public static extern int cImage_Height_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_BitsPerPixel_set")]
  public static extern void cImage_BitsPerPixel_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_BitsPerPixel_get")]
  public static extern int cImage_BitsPerPixel_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Stride_set")]
  public static extern void cImage_Stride_set(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_cImage_Stride_get")]
  public static extern int cImage_Stride_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_cImage")]
  public static extern IntPtr new_cImage();

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_cImage")]
  public static extern void delete_cImage(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Clear")]
  public static extern void CharVector_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Add")]
  public static extern void CharVector_Add(HandleRef jarg1, char jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_size")]
  public static extern uint CharVector_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_capacity")]
  public static extern uint CharVector_capacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_reserve")]
  public static extern void CharVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CharVector__SWIG_0")]
  public static extern IntPtr new_CharVector__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CharVector__SWIG_1")]
  public static extern IntPtr new_CharVector__SWIG_1(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_CharVector__SWIG_2")]
  public static extern IntPtr new_CharVector__SWIG_2(int jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_getitemcopy")]
  public static extern char CharVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_getitem")]
  public static extern char CharVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_setitem")]
  public static extern void CharVector_setitem(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_AddRange")]
  public static extern void CharVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_GetRange")]
  public static extern IntPtr CharVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Insert")]
  public static extern void CharVector_Insert(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_InsertRange")]
  public static extern void CharVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_RemoveAt")]
  public static extern void CharVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_RemoveRange")]
  public static extern void CharVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Repeat")]
  public static extern IntPtr CharVector_Repeat(char jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Reverse__SWIG_0")]
  public static extern void CharVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Reverse__SWIG_1")]
  public static extern void CharVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_SetRange")]
  public static extern void CharVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Contains")]
  public static extern bool CharVector_Contains(HandleRef jarg1, char jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_IndexOf")]
  public static extern int CharVector_IndexOf(HandleRef jarg1, char jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_LastIndexOf")]
  public static extern int CharVector_LastIndexOf(HandleRef jarg1, char jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_CharVector_Remove")]
  public static extern bool CharVector_Remove(HandleRef jarg1, char jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_CharVector")]
  public static extern void delete_CharVector(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Clear")]
  public static extern void IntVector_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Add")]
  public static extern void IntVector_Add(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_size")]
  public static extern uint IntVector_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_capacity")]
  public static extern uint IntVector_capacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_reserve")]
  public static extern void IntVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_IntVector__SWIG_0")]
  public static extern IntPtr new_IntVector__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_IntVector__SWIG_1")]
  public static extern IntPtr new_IntVector__SWIG_1(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_IntVector__SWIG_2")]
  public static extern IntPtr new_IntVector__SWIG_2(int jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_getitemcopy")]
  public static extern int IntVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_getitem")]
  public static extern int IntVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_setitem")]
  public static extern void IntVector_setitem(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_AddRange")]
  public static extern void IntVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_GetRange")]
  public static extern IntPtr IntVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Insert")]
  public static extern void IntVector_Insert(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_InsertRange")]
  public static extern void IntVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_RemoveAt")]
  public static extern void IntVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_RemoveRange")]
  public static extern void IntVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Repeat")]
  public static extern IntPtr IntVector_Repeat(int jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Reverse__SWIG_0")]
  public static extern void IntVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Reverse__SWIG_1")]
  public static extern void IntVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_SetRange")]
  public static extern void IntVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Contains")]
  public static extern bool IntVector_Contains(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_IndexOf")]
  public static extern int IntVector_IndexOf(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_LastIndexOf")]
  public static extern int IntVector_LastIndexOf(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_IntVector_Remove")]
  public static extern bool IntVector_Remove(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_IntVector")]
  public static extern void delete_IntVector(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Clear")]
  public static extern void LongVector_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Add")]
  public static extern void LongVector_Add(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_size")]
  public static extern uint LongVector_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_capacity")]
  public static extern uint LongVector_capacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_reserve")]
  public static extern void LongVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_LongVector__SWIG_0")]
  public static extern IntPtr new_LongVector__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_LongVector__SWIG_1")]
  public static extern IntPtr new_LongVector__SWIG_1(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_LongVector__SWIG_2")]
  public static extern IntPtr new_LongVector__SWIG_2(int jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_getitemcopy")]
  public static extern int LongVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_getitem")]
  public static extern int LongVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_setitem")]
  public static extern void LongVector_setitem(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_AddRange")]
  public static extern void LongVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_GetRange")]
  public static extern IntPtr LongVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Insert")]
  public static extern void LongVector_Insert(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_InsertRange")]
  public static extern void LongVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_RemoveAt")]
  public static extern void LongVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_RemoveRange")]
  public static extern void LongVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Repeat")]
  public static extern IntPtr LongVector_Repeat(int jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Reverse__SWIG_0")]
  public static extern void LongVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Reverse__SWIG_1")]
  public static extern void LongVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_SetRange")]
  public static extern void LongVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Contains")]
  public static extern bool LongVector_Contains(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_IndexOf")]
  public static extern int LongVector_IndexOf(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_LastIndexOf")]
  public static extern int LongVector_LastIndexOf(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_LongVector_Remove")]
  public static extern bool LongVector_Remove(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_LongVector")]
  public static extern void delete_LongVector(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Clear")]
  public static extern void StrVector_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Add")]
  public static extern void StrVector_Add(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_size")]
  public static extern uint StrVector_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_capacity")]
  public static extern uint StrVector_capacity(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_reserve")]
  public static extern void StrVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_StrVector__SWIG_0")]
  public static extern IntPtr new_StrVector__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_StrVector__SWIG_1")]
  public static extern IntPtr new_StrVector__SWIG_1(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_StrVector__SWIG_2")]
  public static extern IntPtr new_StrVector__SWIG_2(int jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_getitemcopy")]
  public static extern string StrVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_getitem")]
  public static extern string StrVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_setitem")]
  public static extern void StrVector_setitem(HandleRef jarg1, int jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_AddRange")]
  public static extern void StrVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_GetRange")]
  public static extern IntPtr StrVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Insert")]
  public static extern void StrVector_Insert(HandleRef jarg1, int jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_InsertRange")]
  public static extern void StrVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_RemoveAt")]
  public static extern void StrVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_RemoveRange")]
  public static extern void StrVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Repeat")]
  public static extern IntPtr StrVector_Repeat(string jarg1, int jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Reverse__SWIG_0")]
  public static extern void StrVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Reverse__SWIG_1")]
  public static extern void StrVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_SetRange")]
  public static extern void StrVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Contains")]
  public static extern bool StrVector_Contains(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_IndexOf")]
  public static extern int StrVector_IndexOf(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_LastIndexOf")]
  public static extern int StrVector_LastIndexOf(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrVector_Remove")]
  public static extern bool StrVector_Remove(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_StrVector")]
  public static extern void delete_StrVector(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_pair_ss__SWIG_0")]
  public static extern IntPtr new_pair_ss__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_pair_ss__SWIG_1")]
  public static extern IntPtr new_pair_ss__SWIG_1(string jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_pair_ss__SWIG_2")]
  public static extern IntPtr new_pair_ss__SWIG_2(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_pair_ss_first_set")]
  public static extern void pair_ss_first_set(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_pair_ss_first_get")]
  public static extern string pair_ss_first_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_pair_ss_second_set")]
  public static extern void pair_ss_second_set(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_pair_ss_second_get")]
  public static extern string pair_ss_second_get(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_pair_ss")]
  public static extern void delete_pair_ss(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_StrMap__SWIG_0")]
  public static extern IntPtr new_StrMap__SWIG_0();

  [DllImport("MMCoreCS", EntryPoint="CSharp_new_StrMap__SWIG_1")]
  public static extern IntPtr new_StrMap__SWIG_1(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_size")]
  public static extern uint StrMap_size(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_empty")]
  public static extern bool StrMap_empty(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_Clear")]
  public static extern void StrMap_Clear(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_getitem")]
  public static extern string StrMap_getitem(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_setitem")]
  public static extern void StrMap_setitem(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_ContainsKey")]
  public static extern bool StrMap_ContainsKey(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_Add")]
  public static extern void StrMap_Add(HandleRef jarg1, string jarg2, string jarg3);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_Remove")]
  public static extern bool StrMap_Remove(HandleRef jarg1, string jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_create_iterator_begin")]
  public static extern IntPtr StrMap_create_iterator_begin(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_StrMap_get_next_key")]
  public static extern string StrMap_get_next_key(HandleRef jarg1, IntPtr jarg2);

  [DllImport("MMCoreCS", EntryPoint="CSharp_delete_StrMap")]
  public static extern void delete_StrMap(HandleRef jarg1);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataKeyErrorUpcast")]
  public static extern IntPtr MetadataKeyErrorUpcast(IntPtr objectRef);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataIndexErrorUpcast")]
  public static extern IntPtr MetadataIndexErrorUpcast(IntPtr objectRef);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataSingleTagUpcast")]
  public static extern IntPtr MetadataSingleTagUpcast(IntPtr objectRef);

  [DllImport("MMCoreCS", EntryPoint="CSharp_MetadataArrayTagUpcast")]
  public static extern IntPtr MetadataArrayTagUpcast(IntPtr objectRef);
}

}
